#    Xforms.pm - An extension to PERL to access XForms functions.
#    Copyright (C) 1996-1997  Martin Bartlett
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

package X11::Xforms;

require Exporter;
require DynaLoader;
require AutoLoader;

=head1 NAME

I<Xforms4Perl> - Call the Xforms GUI library API from Perl 

=head1 SYNOPSIS

	use X11::Xforms;

For access to XEvent and XFontStruct structures returned by Xforms, use
the following, co-delivered, packages. They are NOT, however,
required to run Xforms unless you need such access.

	use X11::XEvent;
	use X11::XFontStruct;

=head1 DESCRIPTION

This package, distributed under the name I<Xforms4Perl>, provides an extension to 
Perl that opens up almost 100% of the Xforms GUI library API to Perl scripts,
thus allowing those scripts to build and interact with Xforms graphical user 
interfaces. It also provides some value added features, such as automatic initialization
of object classes, that are not present in the native Xforms library
(see L<"Value Added Features"> below).

For the most part the interface to Xforms from Perl is the same as that
from C, after appropriate 'C-to-Perl' transforms are made to the C calling
syntax (see L<"Programming Notes"> below). Substantial documentation is 
available for this C interface which is, therefore, equally applicable to 
the Perl interface. This is available from: 

	ftp://einstein.phys.uwm.edu/pub/Xforms/doc

In addition, I<Xforms4Perl> is delivered with a directory named I<doc> (installation
location depends on installation method) which contains, among other things, a file named 
I<Xforms.functions>. This file lists all the functions exported by B<X11::Xforms>
along with protocol notes for those functions that have different protocols to their
C cousins.

Xforms and I<Xforms4Perl> both come with directories named I<DEMOS> which contain a 
large number
of sample applications. Again, the locations of these directories depend upon
the method of installation.

The goal is that by reading the native Xforms documentation in conjunction with this 
man page, the file I<Xforms.functions> and the sample applications,
should allow a programmer to use this package with ease.

=head1 PROGRAMMING NOTES

The Xforms functionality itself is encapsulated by a single Perl package named 
B<X11::Xforms>. To access the functionality, place the following statement at 
the top of your Perl script:

	use X11::Xforms;

Some of the more esoteric Xforms functions return X11 structures - particularly
XEvent and XFontStruct structures. To facilitate maximum usability of such 
functions, two more packages are delivered with I<Xforms4Perl> which allow access
to these two structures. These are named B<X11::XEvent> and B<X11::XFontStruct>
and have their own man pages.

Most B<X11::Xforms> functions have the same protocols as their C counterparts, once
the following standard transforms are applied:

=over 4

=item *

All functions take Perl scalar values as arguments when they take any 
arguments at all. The only exceptions are where filehandles are
passed as arguments. This occurs for the functions B<fl_add_io_callback>
and B<fl_set_error_logfp>. Filehandles are passed as references. So, for
example, B<fl_set_error_logfp> may be called like this:

C<	fl_set_error_logfp(*LOGFILEHANDLE);>

or like this:

C<	$filehandle = *LOGFILEHANDLE;>
C<	fl_set_error_logfp($filehandle);>

=item *

All return values are Perl scalars, or lists of scalars,  set in such a way 
that, if they are used in further Xforms functions they behave as expected.

=item *

Some of the functions in the C interface 
include output arguments as part of their protocol (as
opposed to output values provided by the B<return> statement). The Perl
equivalents NEVER update their arguments. Instead, they will
return their output values as a list of scalars. The first element of the list will be the return value
of the Xforms function. The subsequent elements will be the output arguments in
the order they appear in the C function protocol.

For example, the Xforms function B<fl_get_mouse> is called from C so:

C<	window = fl_get_mouse(&x, &y, &keymask);>

but from Perl so:

C<	($window, $x, $y, $keymask) = fl_get_mouse();>

Therefore, the Perl function protocol does not include the output arguments.

=item *

Where a function in the C interface takes a pointer to an array of input values, the Perl 
equivalent takes an interpolated list of input values I<in the same place in the argument
list>. 

For example, the Xforms function B<fl_lines> (which draws lines between
multiple points) might be called from C like this:

C<	FL_POINT points[] = { {0,0}, {10,0}, {10,10} }; >
C<	fl_lines(points, 3, FL_BLACK); >

The equivalent call from Perl could be coded so:

C<	@points = (0, 0, 10, 0, 10, 10); >
C<	fl_lines(@points, FL_BLACK); >

which is effectively:

C<	fl_lines(0, 0, 10, 0, 10, 10, FL_BLACK); >

In such cases, the C functions usually include an integer argument that 
defines how many members there are in the array. Since the Perl equivalents 
can determine this themselves, I<count> arguments are rarely part
of the protocols of these Perl functions.

=item *

The previous example brings up another point: Most standard Xforms constants
(such as B<FL_BLACK>) can be used verbatim in Perl scripts. A full list of
implemented constants can be found in I<doc/Xforms.constants>.

=back

Applying these principles to the Xforms documentation will generally reveal
the requirements for the Perl equivalents of the C functions described
therein. However, certain functions have different protocols to their C
equivalents, and others have specific extra requirements or other notes
that apply to their usage. 

Therefore, ALL Xforms functions supported by B<X11::Xforms> are listed in the
file I<Xforms.functions> which can be found in the I<Xforms4Perl> I<doc> 
subdirectory. Functions which, after applying the above principles, have
the same protocol as their C cousins, are simply listed. Those that have
different protocols and/or special usage notes have extended entries that
provide these extra details. Always refer to this file as the authoritative
source for protocol and usage information.


=head2 Xforms Callback Routines

B<X11::Xforms> provides full support for most of the Xforms library callbacks. 

A callback
in B<X11::Xforms> is simply a Perl subroutine that has been registered as 
'interested' in some event by the calling of a registration function, such as
B<fl_set_object_callback>. 

The call protocol for the C versions of registration functions requires the
address of the desired callback function. 

The call protocol for their C counterparts requires either a string
containing the name of the callback subroutine, or a scalar value containing
a reference to the subroutine. 

For example, B<fl_set_object_callback> might
be called like this from C:

C<	old_cb = fl_set_object_callback(obj, &cb_func, 0);>

whereas from Perl, the equivalent call can be made like this:

C<	$old_cb = fl_set_object_callback($obj, "cb_func", 0);>  

or like this:

C<	$old_cb = fl_set_object_callback($obj, \&cb_func, 0);>

Where the C function that registers the callback returns a pointer to the 
previous callback, as in this example, the Perl equivalent returns a 
reference to the previous Perl callback subroutine. That reference can be used
in a later callback registration function to re-register the original callback 
subroutine.

When the callback registered by this example is invoked, the arguments passed 
to it can be obtained using the statement:

C<	my($obj, $value) = @_;>

In general B<X11::Xforms> callback subroutines are invoked with equivalent 
arguments to their C counterparts, passed as scalar values in the same order.
The main exceptions to this rule are the B<fl_set_xyplot_symbol> and B<fl_set_error_handler>
callback routines. These have slightly different argument lists due to
their 'variable' nature in C. See the I<doc/Xforms.functions> file for more details.

Some Xforms callback registration routines accept user data
as an extra argument which is, in turn, passed to the
callback routine when it is invoked. The same principal can be used with
B<X11::Xforms> - a Perl scalar can be passed to the registration routine, and
will be passed to the callback when it is invoked.

Where the C function accepts a user data I<value>, the Perl function will
also accept a value - thus, when the callback is invoked, the I<value> of
the scalar passed to the registration routine will be presented to the
callback.

Where the C function accepts a I<pointer> to a user-defined data area, the
Perl function still accepts a Perl scalar. However, when I<this> kind
of callback is invoked, it is the I<original scalar itself> which is presented
to the callback, I<NOT> a copy of it. Therefore, if the value of the 
scalar has changed between registration and invocation, the new value will
be seen by the callback, NOT the value at registration. This is in line with 
pointer usage in C - if the storage the pointer references is modified between 
registration and invocation, the callback sees the modified value.

=head1 ACCESS TO XFORMS GLOBAL VARIABLES

Xforms defines and uses various global variables. Certain of these fields
can be read (only) by calling a function of the same name as the field. 

For example, to read the height of the screen from the fl_scrh field, code:

    $scrh = fl_scrh();

The following fields can be accessed in this way:

	fl_current_form
	fl_display
	fl_root
	fl_screen
	fl_scrh
	fl_scrw
	fl_textgc
	fl_ul_magic_char
	fl_vmode
	fl_vroot            

=head1 ACCESS TO XFORMS DATA STRUCTURES

The I<FD_CMDLOG>, I<FD_FSELECTOR>, I<FL_EditKeymap>, I<FL_FORM>, I<FL_IOPT>
and I<FL_OBJECT> data structures have been defined as Perl objects 
(within the B<X11::Xforms> package). Therefore, the values of most fields in each 
structure can be directly read. In addition, all fields within the 
I<FL_IOPT> structure, and many of the I<FL_FORM> and I<FL_OBJECT> structures, 
can be updated too. 

The syntax to read a field is:

C<	$value = $struct_ref-E<gt>field_name;> 

and to write a writable field is

C<	$oldval = $struct_ref-E<gt>field_name(new_value);>

where '$struct_ref' is the 'blessed' Perl object returned by such 
functions as B<fl_get_fselector_fdstruct>, B<fl_get_command_log_fdstruct>,
B<fl_[create/add]_[object_type]> and B<fl_bgn_form>. In fact the return
value of any function that, in Xforms itself, returns one of the above
structures, can be used as the '$struct_ref' part of a field access.

The available fields in each structure, together with an indication 
of whether each field is read-only (ro) or read-write (rw), are
as follows:

=over 4

=item FD_CMDLOG

All fields are available read-only. However, since
the fields themselves contain FL_FORM or FL_OBJECT 
structures, the fields within those structures can
be accessed as below.

=item FD_FSELECTOR

All fields are available read-only. However, since
the fields themselves contain FL_FORM or FL_OBJECT 
structures, the fields within those structures can
be accessed as below.

=item FL_FORM

 compress_mask     rw
 deactivated       rw
 evmask            rw
 fdui              rw
 first             ro
 focusobj          ro
 frozen            rw
 h                 rw
 has_auto          rw
 hotx              rw
 hoty              rw
 icon_mask         rw
 icon_pixmap       rw
 label             rw
 last              ro
 prop              rw
 top               rw
 u_cdata           rw     
 u_ldata           rw    
 u_vdata           rw    
 use_pixmap        rw
 visible           rw
 vmode             rw
 w                 rw
 window            ro
 wm_border         rw
 x                 rw
 y                 rw

Be warned that the u_cdata field is treated exactly as 
defined - as a character string - and not as a void pointer. Therefore
when writing its value from Perl, be sure to provide a valid character 
string.

=item FL_OBJECT

 active            rw
 align             rw
 argument          rw
 automatic         rw
 belowmouse        rw
 boxtype           rw
 bw                rw
 child             ro
 click_timeout     rw
 clip              rw
 col1              rw
 col2              rw
 double_buffer     rw
 focus             rw
 form              ro
 h                 rw
 input             rw
 label             rw
 lcol              rw
 lsize             rw
 lstyle            rw
 nc                ro
 next              ro
 nwgravity         rw
 objclass          rw
 parent            ro
 prev              ro
 pushed            rw
 radio             rw
 redraw            rw
 resize            rw
 segravity         rw
 type              rw
 u_cdata           rw
 u_ldata           rw    
 u_vdata           rw
 use_pixmap        rw
 visible           rw
 w                 rw
 wantkey           rw
 window            ro
      (virtual field equivalent to $obj->form->window)
 x                 rw
 y                 rw

Be warned that the u_cdata field is treated exactly as 
defined - as a character string - and not as a void pointer. Therefore
when writing its value from Perl, be sure to provide a valid character 
string.

=item FL_IOPT

All fields in this structure are available as read-
write fields. In addition, there is an extra method
provided that returns a reference to a blank FL_IOPT 
object:

C<	$iopt = X11::Xforms::FLOpt-E<gt>new;>

Alternatively, a populated FL_IOPT object can be 
obtained using the B<fl_get_defaults> function.

=item FL_EditKeymap

This structure is used with the B<fl_set_input_editkeymap>
function. All fields in this structure are available 
as read-write fields. In addition, there is an extra 
'method' provided that returns a reference to a blank 
FL_EditKeymap object:

C<	$keymap = X11::Xforms::FLEditKeymap-E<gt>new;>

The idea here is to use the 'new' method to create
the object, use the I<$ref-E<gt>field> syntax to set the
edit key mapping requirements, and then pass the
object to the fl_set_input_editkeymap function. 

See the XFgrep.pl and X4Pinit.pl DEMOs for examples of how 
to use this (especially useful for making Linux Delete and
Backspace keys behave themselves!).

=back


Note that just because a field is read-write does not mean that
you SHOULD write to it. Refer to the Xforms documentation for details
of the use of each field, and if and when a field should be written
to.  

=head1 VALUE ADDED FEATURES

B<X11::Xforms> provides two powerful extra features over and above those delivered with the
native Xforms library. They exist separately but are designed to be used together.

TRY THIS: Once you have installed B<X11::Xforms>, run the demos. Then copy the
B<X4Pinit.pl> demo script to your home directory, renaming it to B<.X4Pinit.pl>,
and re-run the demos: THAT is what these facilities are all about!!

=head2 The Class Initialization Callback

Xforms does not provide a very easy way to apply system
wide defaults to object attributes, such as color and font. If you don't want what
is provided as the library default you have to set every object manually.

The B<Class Initialization Callback> feature solves this problem for Perl 
scripts.

This new feature centers around a new function named 
B<fl_set_class_callback> which allows the Perl script to register 
a callback subroutine for an individual Xforms object class, such as B<FL_BUTTON>.

After registration, the callback will be invoked whenever an object of that class is 
created via the 
standard B<fl_[create/add]_[object_type]> functions. The subroutine is called
after the object is created but before control is returned to the creating script.

As an example, this is how a class callback routine might be registered for 
the B<FL_BUTTON> class:

C<	fl_set_class_callback(FL_BUTTON, >
C<	                      "my_button_initializer");>

the routine B<my_button_initializer> might have been coded as follows:

C<  sub my_button_initializer {>
    
C<      my($new_button) = @_;>

C<      fl_set_object_color($new_button, FL_BLUE, FL_PINK);>
C<  } >

This particular implementation will cause all buttons created by 
B<fl_create_button> or B<fl_add_button>
to take on Blue/Pink color characteristics without having to code the 
B<fl_set_object_color> call after each button creation.

Just about anything can take place within a class callback - including calls
to create other forms and display other dialogs - though care must be taken not 
cause a recursive loop within the callback!

See the I<Xforms.functions> file for protocol and usage notes on B<fl_set_class_callback>.

=head2 The Global Initialization Script

The B<X11::Xforms> package has been implemented such that, if a 
Perl script named I<.X4Pinit.pl> is found in the current
user's home directory then it is B<"require">d into the package. 

This script is intended to contain code that provides for the general 
initialization of B<X11::Xforms> Perl applications. It
is expected to contain at least two subroutines:

=over 4

=item B<fl_pre_init>

This subroutine is automatically called by the package when the exported 
B<fl_initialize> subroutine is called from the application script.
It is invoked immediately before the Xforms B<fl_initialize> function is called.
It is intended to perform any global initialization
that you require in all Perl scripts using B<X11::Xforms> that must
occur before executing Xforms B<fl_initialize>, such as calls to B<fl_set_defaults>.

Note that care must be taken to ONLY perform Xforms activities that are allowed
before B<fl_initialize> is invoked. Failure to stick to this rule could mean
a segmentation fault!

=item B<fl_post_init>

Again, this subroutine is automatically called by the package when the exported 
B<fl_initialize> subroutine is called from the application script.
However, in this case, it is invoked immediately after 
Xforms B<fl_initialize> has returned control to the B<X11::Xforms> package
and before the package returns control to the calling script.
It is intended to perform other global initializations that must wait until 
after invoking the Xforms B<fl_initialize> function, such as calls to 
B<fl_set_class_callback> (see L<"The Class Initialization Callback"> above).

Since at this point Xforms has been fully initialized, any Xforms activity can 
take place inside the B<fl_post_init> subroutine.

=back

Again, the motivation behind this feature is the lack of facilities within Xforms
itself for providing system-wide defaults. The use of B<X> resources is the only
means provided and then only very few resources actually modify the look and feel
of Xforms applications.

Putting these two facilities together provides a very powerful way to customize
the look-and-feel of ALL B<X11::Xforms> interfaces without having to individually
customize each object in every script. It allows for the implementation of a
standard look-and-feel for such interfaces.

An example script named B<X4Pinit.pl> is delivered in the I<DEMOS> subdirectory - 
it makes all objects take on a particular color scheme that I use with the new UNIX
desktop, KDE. Note especially the more complex aspects of changing B<FL_BROWSER> attributes, 
and the initialization of goodies such as B<file selector> and B<command log>. The sample
also initializes the key map to provide 'correct' Delete and Backspace handling under
Linux, switches the default scrollbar to the FL_PLAIN_SCROLLBAR style, and
demonstrates how to change the defaults color themselves with calls to 
B<fl_set_icm_color>. To do these things without a Global Initialization Script 
would be very time and space consuming. 


=head1 SAMPLE APPLICATIONS

Both Xforms and I<Xforms4Perl> are delivered with directories of sample
applications. In both cases the directory is named I<DEMOS> and is placed 
below the distribution master directories. Many of the I<Xforms4Perl> examples 
are directly plagerized from Xforms. Both sets of samples are useful for 
getting to grips with using Xforms and/or B<X11::Xforms>, with the I<Xforms4Perl> 
samples being additionally useful for understanding the transforms that are
necessary to apply the Xforms documentation to Perl.

Of special note are the B<ProcExp.pl> and B<XFtool.pl> scripts. The first
is a filesystem explorer complete with tree view, list view and splitter bar
and demonstrates the development of a sophisticated application with Perl, 
Xforms and I<Xforms4Perl>. The second is a 'boring' toolbar - but, again, is a
sophisticated full-function application written entirely in Perl 
with I<Xforms4Perl>.

Note that some of the B<X11::Xforms> samples are designed specifically for
Linux platforms and, therefore, may not run as delivered in non-Linux
environments.

Note also that some of the scripts rely on facilities that were introduced with
Xforms version 0.88 and, therefore will gracefully die when using Xforms version
0.86.

Note also also (!) that two of the scripts, B<X4Pinit.pl> and B<psf.pl>, are not intended
to be run standalone. The former is a sample Global Initialization Script, the latter
is an implementation of a tree-based 'ps' command for non-Linux systems.

=head1 ERRORS

Just about all errors encountered directly by the package are fatal! However
those encountered by the Xforms library itself will behave as documented in the
Xforms documentation.

B<X11::Xforms> errors fall into two categories: Failure to call an B<X11::Xforms> 
subroutine correctly, and internal errors. Hence
the reason that they are all fatal! The first category encompasses programming
errors, the second either bugs in B<X11::Xforms> or Xforms, or system limitations.

The first category also encompasses attempts to use functions from Xforms
versions that are not compatible with the current version of B<X11::Xforms>.

In all cases the calling Perl script will DIE with an appropriate message.

=head1 UN-IMPLEMENTED FACILITIES

These facilities of the Xforms library have not been implemented 
in B<X11::Xforms> for various reasons, explained below. Ideas and/or 
suggestions and/or advice on overcoming the remaining problems are welcome:

=over 4

=item fl_add/create_mesacanvas

Since this doesn't get compiled into the XForms distribution
it is not included in the package.

=item fl_add_symbol/fl_draw_symbol

Due to the way the package handles callbacks (by registering
a generic routine and saving off the Perl callback in an
easy to find location) it is essential that the callback
itself provide some means of finding where the Perl callback
routine address is held. fl_add_symbol and fl_draw_symbol do not.

=item fl_add_button_class

Similar problems.

=item fl_flip_yorigin

Primarily for use with past versions of Xforms - none of
which are supported by I<Xforms4Perl> anyway.

=item fl_get_vn_value/fl_get_vn_name

esoteric and probably not applicable to Perl, since hashes
achieve the same.

=item fl_free/malloc/calloc/realloc

No use in Perl

=item fl_set_canvas_attributes

Well, ok, its there - but you will need to do some hefty
stuff to build the XSetWindowAttributes structure and send
its address to me!

=item fl_enumerate_fonts

Similar - or I got lazy. If you REALLY want this then tell me
and I'll put it in the next release!

=item The file sys stuff (such as dirlist filter stuff)

This is easily supported by base Perl.

=item fl_create_colormap

Relies on XVisualInfo structure which I have not provided 
access to (yet!)

=item fl_v2f/i/s/d

C-array reliant for which there is little need in Perl

=item Postscript dump stuff 

Maybe later

=back

=head1 GETTING SUPPORT

Usage support for the I<Xforms4Perl> packages is available on the Xforms m
ailing list (see the above ftp site for
details), the comp.lang.perl.modules newsgroup, and by e-mail from 
martin@nitram.demon.co.uk.

=head1 COMPATIBILITY

The current version of this package (0.8.4) is designed to operate with the
0.88 public release of Xforms. It can also be compiled against the 0.86 public 
release, for backward compatibility, although some constant values may be 
wrong for 0.86. The package was developed using Perl 5.003 and 5.004. It is, 
however, believed to also operate with Perl 5.002. It has been successfully 
tested on a large variety of Unix-like systems.

=head1 SEE ALSO

For more information, see:

	Xforms documentation
	doc/Xforms.functions
	doc/Xforms.constants

=head1 AUTHOR

Martin Bartlett <martin@nitram.demon.co.uk>

=cut

@ISA = qw(Exporter DynaLoader);

$X11::Xforms::VERSION = '0.8.4';

# Items to export into callers namespace by default. Note: do not export
# names by default without a very good reason. Use EXPORT_OK instead.
# Do not simply export all your public functions/methods/constants.
@EXPORT = qw(

FL_ACTIVE_XYPLOT
FL_ALIGN_BOTTOM
FL_ALIGN_BOTTOM_LEFT
FL_ALIGN_BOTTOM_RIGHT
FL_ALIGN_CENTER
FL_ALIGN_INSIDE
FL_ALIGN_LEFT
FL_ALIGN_LEFT_BOTTOM
FL_ALIGN_LEFT_TOP
FL_ALIGN_RIGHT
FL_ALIGN_RIGHT_BOTTOM
FL_ALIGN_RIGHT_TOP
FL_ALIGN_TOP
FL_ALIGN_TOP_LEFT
FL_ALIGN_TOP_RIGHT
FL_ALIGN_VERT
FL_ALL_FREE
FL_ALPHASORT
FL_ALT_MASK
FL_ALT_VAL
FL_ANALOG_CLOCK
FL_AND
FL_ATTRIB
FL_AUTO
FL_BAR_CHART
FL_BEGIN_GROUP
FL_BITMAP
FL_BITMAPBUTTON
FL_BITMAPBUTTON_ALIGN
FL_BITMAPBUTTON_BOXTYPE
FL_BITMAPBUTTON_COL1
FL_BITMAPBUTTON_COL2
FL_BITMAPBUTTON_LCOL
FL_BITMAP_ALIGN
FL_BITMAP_BOXTYPE
FL_BITMAP_COL1
FL_BITMAP_COL2
FL_BITMAP_LCOL
FL_BLACK
FL_BLUE
FL_BOLDITALIC_STYLE
FL_BOLD_STYLE
FL_BOOL
FL_BORDER_BOX
FL_BORDER_FRAME
FL_BOTTOM_BCOL
FL_BOTTOM_TABFOLDER
FL_BOUND_WIDTH
FL_BOX
FL_BROWSER
FL_BROWSER_ALIGN
FL_BROWSER_BOXTYPE
FL_BROWSER_COL1
FL_BROWSER_COL2
FL_BROWSER_FONTSIZE
FL_BROWSER_LCOL
FL_BROWSER_LINELENGTH
FL_BROWSER_SLCOL
FL_BUILT_IN_COLS
FL_BUTTON
FL_BUTTON_ALIGN
FL_BUTTON_BOXTYPE
FL_BUTTON_BW
FL_BUTTON_COL1
FL_BUTTON_COL2
FL_BUTTON_LCOL
FL_BUTTON_MCOL1
FL_BUTTON_MCOL2
FL_CANCEL
FL_CANVAS
FL_CANVAS_ALIGN
FL_CANVAS_BOXTYPE
FL_CHART
FL_CHARTREUSE
FL_CHART_ALIGN
FL_CHART_BOXTYPE
FL_CHART_COL1
FL_CHART_LCOL
FL_CHART_MAX
FL_CHECKBUTTON
FL_CHECKBUTTON_ALIGN
FL_CHECKBUTTON_BOXTYPE
FL_CHECKBUTTON_COL1
FL_CHECKBUTTON_COL2
FL_CHECKBUTTON_LCOL
FL_CHECKBUTTON_MCOL
FL_CHECKBUTTON_TOPCOL
FL_CHOICE
FL_CHOICE_ALIGN
FL_CHOICE_BOXTYPE
FL_CHOICE_COL1
FL_CHOICE_COL2
FL_CHOICE_LCOL
FL_CHOICE_MAXITEMS
FL_CHOICE_MCOL
FL_CIRCLE_XYPLOT
FL_CLASS_END
FL_CLASS_START
FL_CLICK_TIMEOUT
FL_CLOCK
FL_CLOCK_ALIGN
FL_CLOCK_BOXTYPE
FL_CLOCK_COL1
FL_CLOCK_COL2
FL_CLOCK_LCOL
FL_CLOCK_TOPCOL
FL_CLOSE
FL_COL1
FL_CONTINUOUS_FREE
FL_CONTROL_MASK
FL_COORD_MM
FL_COORD_PIXEL
FL_COORD_POINT
FL_COORD_centiMM
FL_COORD_centiPOINT
FL_COPY
FL_COUNTER
FL_COUNTER_ALIGN
FL_COUNTER_BOXTYPE
FL_COUNTER_BW
FL_COUNTER_COL1
FL_COUNTER_COL2
FL_COUNTER_LCOL
FL_CYAN
FL_DARKCYAN
FL_DARKGOLD
FL_DARKORANGE
FL_DARKTOMATO
FL_DARKVIOLET
FL_DASH
FL_DASHED_XYPLOT
FL_DATE_INPUT
FL_DBLCLICK
FL_DEEPPINK
FL_DEFAULT_CURSOR
FL_DEFAULT_FONT
FL_DEFAULT_SIZE
FL_DIAL
FL_DIAL_ALIGN
FL_DIAL_BOXTYPE
FL_DIAL_CCW
FL_DIAL_COL1
FL_DIAL_COL2
FL_DIAL_CW
FL_DIAL_LCOL
FL_DIAL_TOPCOL
FL_DIGITAL_CLOCK
FL_DODGERBLUE
FL_DOGERBLUE
FL_DOT
FL_DOTDASH
FL_DOTDASHED_XYPLOT
FL_DOTTED_XYPLOT
FL_DOWN_BOX
FL_DOWN_FRAME
FL_DRAW
FL_DRAWLABEL
FL_DROPLIST_CHOICE
FL_DefaultVisual
FL_EMBOSSED_BOX
FL_EMBOSSED_FRAME
FL_EMBOSSED_STYLE
FL_EMPTY_XYPLOT
FL_EMPTY_XYPLOT
FL_END_GROUP
FL_ENGRAVED_FRAME
FL_ENGRAVED_STYLE
FL_ENTER
FL_EXCEPT
FL_East
FL_FILLED_CHART
FL_FILL_CHART
FL_FILL_DIAL
FL_FILL_XYPLOT
FL_FIXEDBOLDITALIC_STYLE
FL_FIXEDBOLD_STYLE
FL_FIXEDITALIC_STYLE
FL_FIXED_STYLE
FL_FIX_SIZE
FL_FLAT_BOX
FL_FLOAT
FL_FLOAT_INPUT
FL_FOCUS
FL_FRAME
FL_FRAME_BOX
FL_FRAME_COL1
FL_FRAME_COL2
FL_FRAME_LCOL
FL_FREE
FL_FREEMEM
FL_FREE_COL1
FL_FREE_COL10
FL_FREE_COL11
FL_FREE_COL12
FL_FREE_COL13
FL_FREE_COL14
FL_FREE_COL15
FL_FREE_COL16
FL_FREE_COL2
FL_FREE_COL3
FL_FREE_COL4
FL_FREE_COL5
FL_FREE_COL6
FL_FREE_COL7
FL_FREE_COL8
FL_FREE_COL9
FL_FREE_SIZE
FL_FULLBORDER
FL_ForgetGravity
FL_GLCANVAS
FL_GRAY16
FL_GRAY35
FL_GRAY63
FL_GRAY75
FL_GRAY80
FL_GRAY90
FL_GREEN
FL_GRID_MAJOR 
FL_GRID_MINOR
FL_GRID_NONE
FL_GrayScale
FL_HIDDEN_BUTTON
FL_HIDDEN_INPUT
FL_HIDDEN_RET_BUTTON
FL_HIDDEN_TIMER
FL_HOLD_BROWSER
FL_HORBAR_CHART
FL_HOR_BASIC_SCROLLBAR
FL_HOR_BROWSER_SLIDER
FL_HOR_FILL_SLIDER
FL_HOR_NICE_SCROLLBAR 
FL_HOR_NICE_SLIDER
FL_HOR_PLAIN_SCROLLBAR
FL_HOR_SCROLLBAR 
FL_HOR_SLIDER
FL_HOR_THIN_SCROLLBAR 
FL_HUGE_FONT
FL_HUGE_SIZE
FL_IGNORE
FL_IMAGECANVAS
FL_IMPULSE_XYPLOT
FL_INACTIVE
FL_INACTIVE_COL
FL_INACTIVE_FREE
FL_INDIANRED
FL_INOUT_BUTTON
FL_INPUT
FL_INPUT_ALIGN
FL_INPUT_BOXTYPE
FL_INPUT_CCOL
FL_INPUT_COL1
FL_INPUT_COL2
FL_INPUT_DDMM
FL_INPUT_FREE
FL_INPUT_LCOL
FL_INPUT_MMDD
FL_INPUT_TCOL
FL_INT
FL_INT_INPUT
FL_INVALID
FL_INVALID_CLASS
FL_INVALID_STYLE
FL_INVISIBLE_CURSOR
FL_IS_CANVAS
FL_IS_DOWNBOX
FL_ITALIC_STYLE
FL_KEYBOARD
FL_KEY_ALL
FL_KEY_NORMAL
FL_KEY_SPECIAL
FL_KEY_TAB
FL_LABELFRAME
FL_LARGE_FONT
FL_LARGE_SIZE
FL_LCOL
FL_LEAVE
FL_LEFTMOUSE
FL_LEFT_BCOL
FL_LEFT_MOUSE
FL_LEFT_TABFOLDER
FL_LIGHTBUTTON
FL_LIGHTBUTTON_ALIGN
FL_LIGHTBUTTON_BOXTYPE
FL_LIGHTBUTTON_COL1
FL_LIGHTBUTTON_COL2
FL_LIGHTBUTTON_LCOL
FL_LIGHTBUTTON_MCOL
FL_LIGHTBUTTON_MINSIZE
FL_LIGHTBUTTON_TOPCOL
FL_LINEAR
FL_LINEPOINTS_XYPLOT
FL_LINE_CHART
FL_LINE_DIAL
FL_LOG
FL_LONG
FL_LONGDASH
FL_LONGDASHED_XYPLOT
FL_MAGENTA
FL_MAXFONTS
FL_MAXPUPI
FL_MAX_COLS
FL_MAX_FONTSIZES
FL_MAX_FSELECTOR
FL_MAX_XYPLOTOVERLAY
FL_MBUTTON1
FL_MBUTTON2
FL_MBUTTON3
FL_MBUTTON4
FL_MBUTTON5
FL_MCOL
FL_MEDIUM_FONT
FL_MEDIUM_SIZE
FL_MENU
FL_MENUBAR
FL_MENUBAR_BOXTYPE
FL_MENUBAR_COL1
FL_MENUBAR_COL2
FL_MENUBAR_LCOL
FL_MENU_ALIGN
FL_MENU_BOXTYPE
FL_MENU_BUTTON
FL_MENU_COL1
FL_MENU_COL2
FL_MENU_LCOL
FL_MENU_MAXITEMS
FL_MENU_MAXSTR
FL_MIDDLEMOUSE
FL_MIDDLE_MOUSE
FL_MINDEPTH
FL_MODAL
FL_MOTION
FL_MOUSE
FL_MTIMESORT
FL_MULTILINE_INPUT
FL_MULTI_BROWSER
FL_NICE_SCROLLBAR
FL_NOBORDER
FL_NOEVENT
FL_NONE
FL_NORMAL_BITMAP
FL_NORMAL_BROWSER
FL_NORMAL_BUTTON
FL_NORMAL_CANVAS
FL_NORMAL_CHOICE
FL_NORMAL_CHOICE2
FL_NORMAL_COUNTER
FL_NORMAL_DIAL
FL_NORMAL_FONT
FL_NORMAL_FONT1
FL_NORMAL_FONT2
FL_NORMAL_FREE
FL_NORMAL_INPUT
FL_NORMAL_MENUBAR
FL_NORMAL_PIXMAP
FL_NORMAL_POSITIONER
FL_NORMAL_SCROLLBAR
FL_NORMAL_SIZE
FL_NORMAL_STYLE
FL_NORMAL_TABFOLDER
FL_NORMAL_TEXT
FL_NORMAL_TIMER
FL_NORMAL_XYPLOT
FL_NO_BOX
FL_NO_FRAME
FL_NoGravity
FL_North
FL_NorthEast
FL_NorthWest
FL_OFF
FL_OK
FL_ON
FL_ORCHID
FL_OTHER
FL_OVAL3D_DOWNBOX
FL_OVAL3D_EMBOSSEDBOX
FL_OVAL3D_FRAMEBOX
FL_OVAL3D_UPBOX
FL_OVAL_BOX
FL_OVAL_FRAME
FL_OVERLAY_POSITIONER
FL_ObjWin
FL_OptionIsArg
FL_OptionNoArg
FL_OptionResArg
FL_OptionSepArg
FL_OptionSkipArg
FL_OptionSkipLine
FL_OptionSkipNArgs
FL_OptionStickyArg
FL_PALEGREEN
FL_PDBS
FL_PDBorderWidth
FL_PDBrowserFontSize
FL_PDButtonFontSize
FL_PDButtonLabel
FL_PDButtonLabelSize
FL_PDChoiceFontSize
FL_PDClass
FL_PDCoordUnit
FL_PDDebug
FL_PDDepth
FL_PDDouble
FL_PDInputFontSize
FL_PDInputLabelSize
FL_PDLabelFontSize
FL_PDLeftScrollbar
FL_PDMenuFontSize
FL_PDPrivateMap
FL_PDPupFontSize
FL_PDSafe
FL_PDScrollbarType
FL_PDSharedMap
FL_PDSliderFontSize
FL_PDSliderLabelSize
FL_PDStandardMap
FL_PDSync
FL_PDThinScrollbar
FL_PDULPropWidth
FL_PDULThickness
FL_PDVisual
FL_PIE_CHART
FL_PIXMAP
FL_PIXMAPBUTTON
FL_PIXMAPBUTTON_ALIGN
FL_PIXMAPBUTTON_BOXTYPE
FL_PIXMAPBUTTON_COL1
FL_PIXMAPBUTTON_COL2
FL_PIXMAPBUTTON_LCOL
FL_PLACE_ASPECT
FL_PLACE_CENTER
FL_PLACE_CENTERFREE
FL_PLACE_FREE
FL_PLACE_FREE_CENTER
FL_PLACE_FULLSCREEN
FL_PLACE_GEOMETRY
FL_PLACE_HOTSPOT
FL_PLACE_ICONIC
FL_PLACE_MOUSE
FL_PLACE_POSITION
FL_PLACE_SIZE
FL_PLAIN_SCROLLBAR
FL_POINTS_XYPLOT
FL_POSITIONER
FL_POSITIONER_ALIGN
FL_POSITIONER_BOXTYPE
FL_POSITIONER_COL1
FL_POSITIONER_COL2
FL_POSITIONER_LCOL
FL_PREEMPT
FL_PS
FL_PULLDOWN_MENU
FL_PUP_BOX
FL_PUP_CHECK
FL_PUP_GRAY
FL_PUP_GREY
FL_PUP_INACTIVE
FL_PUP_NONE
FL_PUP_PADH
FL_PUP_RADIO
FL_PUP_TOGGLE
FL_PUSH
FL_PUSH_BUTTON
FL_PUSH_MENU
FL_PseudoColor
FL_RADIO_BUTTON
FL_RALPHASORT
FL_READ
FL_RED
FL_RELEASE
FL_RESIZE_ALL
FL_RESIZE_NONE
FL_RESIZE_X
FL_RESIZE_Y
FL_RETURN_ALWAYS
FL_RETURN_BUTTON
FL_RETURN_CHANGED
FL_RETURN_DBLCLICK
FL_RETURN_END
FL_RETURN_END_CHANGED
FL_RFLAT_BOX
FL_RIGHTMOUSE
FL_RIGHT_BCOL
FL_RIGHT_MOUSE
FL_RIGHT_TABFOLDER
FL_RINGBELL
FL_RMTIMESORT
FL_ROUND3DBUTTON
FL_ROUND3DBUTTON_ALIGN
FL_ROUND3DBUTTON_BOXTYPE
FL_ROUND3DBUTTON_COL1
FL_ROUND3DBUTTON_COL2
FL_ROUND3DBUTTON_LCOL
FL_ROUND3DBUTTON_MCOL
FL_ROUND3DBUTTON_TOPCOL
FL_ROUNDBUTTON
FL_ROUNDBUTTON_ALIGN
FL_ROUNDBUTTON_BOXTYPE
FL_ROUNDBUTTON_COL1
FL_ROUNDBUTTON_COL2
FL_ROUNDBUTTON_LCOL
FL_ROUNDBUTTON_MCOL
FL_ROUNDBUTTON_TOPCOL
FL_ROUNDED3D_DOWNBOX
FL_ROUNDED3D_UPBOX
FL_ROUNDED_BOX
FL_ROUNDED_FRAME
FL_RSHADOW_BOX
FL_RSIZESORT
FL_SCROLLBAR
FL_SCROLLBAR_ALWAYS_ON
FL_SCROLLBAR_OFF
FL_SCROLLBAR_ON
FL_SCROLLBUTTON 
FL_SCROLLED_CANVAS
FL_SECRET_INPUT
FL_SECRET_INPUT
FL_SELECT_BROWSER
FL_SHADOW_BOX
FL_SHADOW_FRAME
FL_SHADOW_STYLE
FL_SHADOW_STYLE
FL_SHIFT_MASK
FL_SHORT
FL_SHORTCUT
FL_SIMPLE_CHOICE
FL_SIMPLE_COUNTER
FL_SIZESORT
FL_SLATEBLUE
FL_SLEEPING_FREE
FL_SLIDER
FL_SLIDER_ALIGN
FL_SLIDER_ALL
FL_SLIDER_BOX
FL_SLIDER_BOXTYPE
FL_SLIDER_BW1
FL_SLIDER_BW2
FL_SLIDER_COL1
FL_SLIDER_COL2
FL_SLIDER_DOWN
FL_SLIDER_FINE
FL_SLIDER_LCOL
FL_SLIDER_NOB
FL_SLIDER_NONE
FL_SLIDER_UP
FL_SLIDER_WIDTH
FL_SMALL_FONT
FL_SMALL_SIZE
FL_SOLID
FL_SPECIALPIE_CHART
FL_SPIKE_CHART
FL_SPRINGGREEN
FL_SQUARE_XYPLOT
FL_STEP
FL_STRING
FL_South
FL_SouthEast
FL_SouthWest
FL_StaticColor
FL_StaticGray
FL_TABFOLDER
FL_TEXT
FL_TEXT_ALIGN
FL_TEXT_BOXTYPE
FL_TEXT_COL1
FL_TEXT_COL2
FL_TEXT_LCOL
FL_THIN_SCROLLBAR
FL_TIMER
FL_TIMER_ALIGN
FL_TIMER_BLINKRATE
FL_TIMER_BOXTYPE
FL_TIMER_COL1
FL_TIMER_COL2
FL_TIMER_EVENT
FL_TIMER_LCOL
FL_TIMESBOLDITALIC_STYLE
FL_TIMESBOLD_STYLE
FL_TIMESITALIC_STYLE
FL_TIMES_STYLE
FL_TINY_FONT
FL_TINY_SIZE
FL_TOMATO
FL_TOP_BCOL
FL_TOP_TABFOLDER
FL_TOUCH_BUTTON
FL_TOUCH_MENU
FL_TRANSIENT
FL_TRPLCLICK
FL_TrueColor
FL_UNFOCUS
FL_UP_BOX
FL_UP_FRAME
FL_USERDASH
FL_USERDOUBLEDASH
FL_VALID
FL_VALSLIDER
FL_VALUE_TIMER
FL_VERT_BASIC_SCROLLBAR
FL_VERT_BROWSER_SLIDER
FL_VERT_FILL_SLIDER
FL_VERT_NICE_SCROLLBAR 
FL_VERT_NICE_SLIDER
FL_VERT_PLAIN_SCROLLBAR
FL_VERT_SCROLLBAR 
FL_VERT_SLIDER
FL_VERT_THIN_SCROLLBAR 
FL_WHEAT
FL_WHEN_NEEDED
FL_WHITE
FL_WM_NORMAL
FL_WM_SHIFT
FL_WRITE
FL_West
FL_XOR
FL_XYPLOT
FL_XYPLOT_ALIGN
FL_XYPLOT_BOXTYPE
FL_XYPLOT_COL1
FL_XYPLOT_LCOL
FL_YELLOW
FL_illegalVisual
FT_FIFO
FT_FILE
fl_XEventsQueued
fl_XNextEvent
fl_XPeekEvent
fl_XPutBackEvent
fl_activate_all_forms
fl_activate_event_callbacks
fl_activate_form
fl_activate_glcanvas
fl_activate_object
fl_add_bitmap
fl_add_bitmapbutton
fl_add_box
fl_add_browser
fl_add_browser_line
fl_add_button
fl_add_canvas
fl_add_canvas_handler
fl_add_chart
fl_add_chart_value
fl_add_checkbutton
fl_add_choice
fl_add_clock
fl_add_counter
fl_add_dial
fl_add_event_callback
fl_add_float_vertex
fl_add_frame
fl_add_free
fl_add_fselector_appbutton
fl_add_glcanvas
fl_add_input
fl_add_io_callback
fl_add_labelframe
fl_add_lightbutton
fl_add_menu
fl_add_menubar 
fl_add_object
fl_add_pixmap
fl_add_pixmapbutton
fl_add_positioner
fl_add_round3dbutton
fl_add_roundbutton
fl_add_scrollbar 
fl_add_scrollbutton 
fl_add_selected_xevent
fl_add_signal_callback
fl_add_slider
fl_add_tabfolder
fl_add_text
fl_add_timeout
fl_add_timer
fl_add_valslider
fl_add_vertex
fl_add_xyplot
fl_add_xyplot_overlay
fl_add_xyplot_overlay_file
fl_add_xyplot_text
fl_addto_browser
fl_addto_browser_chars
fl_addto_choice
fl_addto_command_log
fl_addto_form
fl_addto_group
fl_addto_menu
fl_addto_selected_xevent
fl_addto_tabfolder
fl_addtopup
fl_adjust_form_size
fl_app_signal_direct
fl_append_browser
fl_arc
fl_arcf
fl_bgn_form
fl_bgn_group
fl_bgnclosedline
fl_bgnline
fl_bgnpolygon
fl_bk_color
fl_bk_textcolor
fl_call_object_callback
fl_canvas_yield_to_shortcut
fl_check_command 
fl_check_forms
fl_check_only_forms
fl_circ
fl_circf
fl_clear_browser
fl_clear_chart
fl_clear_choice
fl_clear_command_log
fl_clear_menu
fl_clear_menubar 
fl_clear_xyplot
fl_close_command
fl_color
fl_compute_object_geometry
fl_create_GC
fl_create_animated_cursor 
fl_create_bitmap
fl_create_bitmap_cursor
fl_create_bitmapbutton
fl_create_box
fl_create_browser
fl_create_button
fl_create_canvas
fl_create_chart
fl_create_checkbutton
fl_create_choice
fl_create_clock
fl_create_counter
fl_create_dial
fl_create_frame
fl_create_free
fl_create_from_bitmapdata
fl_create_from_pixmapdata
fl_create_generic_button
fl_create_generic_canvas
fl_create_glcanvas
fl_create_input
fl_create_labelframe
fl_create_lightbutton
fl_create_menu
fl_create_menubar 
fl_create_pixmap
fl_create_pixmapbutton
fl_create_positioner
fl_create_round3dbutton
fl_create_roundbutton
fl_create_scrollbar 
fl_create_scrollbutton 
fl_create_slider
fl_create_tabfolder
fl_create_text
fl_create_timer
fl_create_valslider
fl_create_xyplot
fl_current_form
fl_current_pup
fl_dashedlinestyle
fl_deactivate_all_forms
fl_deactivate_form
fl_deactivate_object
fl_default_win
fl_default_window
fl_defpup
fl_delete_browser_line
fl_delete_choice
fl_delete_folder 
fl_delete_folder_byname
fl_delete_folder_bynumber
fl_delete_menu_item
fl_delete_object
fl_delete_xyplot_overlay
fl_delete_xyplot_text
fl_deselect_browser
fl_deselect_browser_line
fl_diagline
fl_disable_fselector_cache
fl_display
fl_do_forms
fl_do_only_forms
fl_dopup
fl_draw_object_label
fl_draw_object_label_outside
fl_draw_object_outside_label
fl_draw_text
fl_drawmode
fl_drw_box
fl_drw_checkbox
fl_drw_frame
fl_drw_slider
fl_drw_text
fl_drw_text_beside
fl_drw_text_cursor
fl_end_all_command
fl_end_command
fl_end_form
fl_end_group
fl_endclosedline
fl_endline
fl_endpolygon
fl_exe_command
fl_fill_rectangle
fl_finish
fl_fit_object_label
fl_form_is_visible
fl_free_colors
fl_free_form
fl_free_object
fl_free_pixels
fl_free_pixmap
fl_free_pixmap_pixmap
fl_free_pixmapbutton_pixmap
fl_freepup
fl_freeze_all_forms
fl_freeze_form
fl_get_active_folder 
fl_get_active_folder_name
fl_get_active_folder_number
fl_get_align_xy
fl_get_app_mainform
fl_get_app_resources
fl_get_border_width
fl_get_browser
fl_get_browser_dimension
fl_get_browser_line
fl_get_browser_maxline
fl_get_browser_screenlines
fl_get_browser_topline
fl_get_browser_xoffset
fl_get_button
fl_get_button_numb
fl_get_canvas_colormap
fl_get_canvas_depth
fl_get_canvas_id
fl_get_char_height
fl_get_char_width
fl_get_choice
fl_get_choice_item_text
fl_get_choice_maxitems
fl_get_choice_text
fl_get_clock
fl_get_command_log_fdstruct
fl_get_coordunit
fl_get_counter_bounds
fl_get_counter_step
fl_get_counter_value
fl_get_cursor_byname
fl_get_defaults
fl_get_dial_bounds
fl_get_dial_value
fl_get_directory
fl_get_display
fl_get_drawmode
fl_get_filename
fl_get_flcolor
fl_get_fntstruct
fl_get_focus_object
fl_get_folder
fl_get_folder_area
fl_get_folder_name
fl_get_folder_number
fl_get_font_struct
fl_get_fontstruct
fl_get_form_event_cmask
fl_get_form_mouse
fl_get_form_vclass
fl_get_fselector_fdstruct
fl_get_fselector_form
fl_get_gc 
fl_get_glcanvas_attributes
fl_get_glcanvas_context
fl_get_glcanvas_defaults
fl_get_glcanvas_xvisualinfo
fl_get_icm_color
fl_get_input
fl_get_input_cursorpos
fl_get_input_format
fl_get_input_numberoflines
fl_get_input_screenlines
fl_get_input_selected_range 
fl_get_input_topline
fl_get_input_xoffset
fl_get_linestyle
fl_get_linewidth
fl_get_menu
fl_get_menu_item_mode
fl_get_menu_item_text
fl_get_menu_maxitems
fl_get_menu_popup 
fl_get_menu_text
fl_get_mouse
fl_get_object_bbox
fl_get_object_component
fl_get_object_geometry
fl_get_object_position
fl_get_pattern
fl_get_pixel
fl_get_pixmap_pixmap
fl_get_pixmapbutton_pixmap
fl_get_positioner_xbounds
fl_get_positioner_xvalue
fl_get_positioner_ybounds
fl_get_positioner_yvalue
fl_get_real_object_window 
fl_get_resource
fl_get_scrollbar_bounds
fl_get_scrollbar_increment
fl_get_scrollbar_value 
fl_get_slider_bounds
fl_get_slider_increment
fl_get_slider_value
fl_get_string_dimension
fl_get_string_height
fl_get_string_size
fl_get_string_width
fl_get_string_widthTAB
fl_get_timer
fl_get_vclass
fl_get_visual_depth
fl_get_vmode
fl_get_win_geometry
fl_get_win_mouse
fl_get_win_origin
fl_get_win_size
fl_get_wingeometry
fl_get_winorigin
fl_get_winsize
fl_get_xyplot
fl_get_xyplot_data
fl_get_xyplot_numdata 
fl_get_xyplot_overlay_data 
fl_get_xyplot_xbounds
fl_get_xyplot_xmapping
fl_get_xyplot_ybounds
fl_get_xyplot_ymapping
fl_getmcolor
fl_getpup_items 
fl_getpup_mode
fl_getpup_text
fl_gettime
fl_glwincreate
fl_glwinopen
fl_hide_alert 
fl_hide_canvas
fl_hide_choice 
fl_hide_command_log
fl_hide_form
fl_hide_fselector
fl_hide_input 
fl_hide_message 
fl_hide_object
fl_hide_oneliner
fl_hide_question 
fl_hidepup
fl_initial_wingeometry
fl_initial_winposition
fl_initial_winsize
fl_initial_winstate
fl_initialize
fl_insert_browser_line
fl_insert_chart_value
fl_interpolate
fl_invalidate_fselector_cache
fl_isselected_browser_line
fl_keypressed
fl_keysym_pressed
fl_last_event
fl_library_version
fl_line
fl_lines
fl_linestyle
fl_linewidth
fl_load_browser
fl_lower_form
fl_make_object
fl_mapcolor
fl_mapcolor_name
fl_mapcolorname
fl_mode_capable
fl_modify_canvas_prop
fl_mouse_button
fl_mousebutton
fl_msleep
fl_newpup
fl_noborder
fl_now 
fl_open_command
fl_oval
fl_oval_bound
fl_ovalarc
fl_ovalbound
fl_ovalf
fl_ovall
fl_pieslice
fl_point
fl_points
fl_polybound
fl_polyf
fl_polygon
fl_polyl
fl_pref_wingeometry
fl_pref_winposition
fl_pref_winsize
fl_prepare_form_window
fl_print_xevent_name
fl_raise_form
fl_read_bitmapfile
fl_read_pixmapfile
fl_rect
fl_rectangle
fl_rectbound
fl_rectf
fl_redraw_form
fl_redraw_object
fl_refresh_fselector
fl_register_callback
fl_register_raw_callback
fl_remove_canvas_handler
fl_remove_event_callback
fl_remove_fselector_appbutton
fl_remove_io_callback
fl_remove_selected_xevent
fl_remove_signal_callback
fl_remove_timeout
fl_replace_browser_line
fl_replace_chart_value
fl_replace_choice
fl_replace_folder_bynumber 
fl_replace_menu_item
fl_replace_xyplot_point
fl_request_clipboard
fl_reset_cursor
fl_reset_focus_object
fl_reset_vertex
fl_reset_winconstraints
fl_resume_timer
fl_ringbell
fl_root
fl_roundrect
fl_roundrectangle
fl_roundrectf
fl_scale_form
fl_scale_object
fl_screen
fl_scrh
fl_scrw
fl_select_browser_line
fl_set_app_mainform
fl_set_app_nomainform
fl_set_atclose
fl_set_background
fl_set_bitmap_data
fl_set_bitmap_datafile
fl_set_bitmap_file
fl_set_bitmapbutton_data
fl_set_bitmapbutton_datafile
fl_set_bitmapbutton_file
fl_set_border_width
fl_set_browser_dblclick_callback
fl_set_browser_fontsize
fl_set_browser_fontstyle
fl_set_browser_hscrollbar
fl_set_browser_line_selectable
fl_set_browser_scrollbarsize
fl_set_browser_specialkey
fl_set_browser_topline
fl_set_browser_vscrollbar
fl_set_browser_xoffset
fl_set_button
fl_set_button_shortcut
fl_set_call_back
fl_set_canvas_attributes
fl_set_canvas_colormap
fl_set_canvas_decoration
fl_set_canvas_depth
fl_set_canvas_visual
fl_set_chart_autosize
fl_set_chart_bounds
fl_set_chart_lcol
fl_set_chart_lcolor
fl_set_chart_lsize
fl_set_chart_lstyle
fl_set_chart_maxnumb
fl_set_choice
fl_set_choice_align
fl_set_choice_entries
fl_set_choice_fontsize
fl_set_choice_fontstyle
fl_set_choice_item_mode
fl_set_choice_item_shortcut
fl_set_choice_shortcut
fl_set_choice_text
fl_set_choices_shortcut
fl_set_class_callback
fl_set_clipping
fl_set_clippings
fl_set_clock_adjustment
fl_set_clock_ampm
fl_set_color_leak
fl_set_command_log_position
fl_set_coordunit
fl_set_counter_bounds
fl_set_counter_filter
fl_set_counter_precision
fl_set_counter_return
fl_set_counter_step
fl_set_counter_value
fl_set_cursor
fl_set_cursor_color
fl_set_defaults
fl_set_dial_angles
fl_set_dial_bounds
fl_set_dial_cross
fl_set_dial_direction
fl_set_dial_return
fl_set_dial_step
fl_set_dial_value
fl_set_directory
fl_set_dirlist_sort
fl_set_drawmode
fl_set_error_handler
fl_set_error_logfp
fl_set_event_callback
fl_set_focus_object
fl_set_folder 
fl_set_folder_byname
fl_set_folder_bynumber
fl_set_font
fl_set_font_name
fl_set_foreground
fl_set_form_atactivate
fl_set_form_atclose
fl_set_form_atdeactivate
fl_set_form_call_back
fl_set_form_callback
fl_set_form_dblbuffer
fl_set_form_event_cmask
fl_set_form_geometry
fl_set_form_hotobject
fl_set_form_hotspot
fl_set_form_icon
fl_set_form_maxsize
fl_set_form_minsize
fl_set_form_position
fl_set_form_property
fl_set_form_size
fl_set_form_title
fl_set_fselector_border
fl_set_fselector_callback
fl_set_fselector_cb
fl_set_fselector_filetype_marker
fl_set_fselector_fontsize
fl_set_fselector_fontstyle
fl_set_fselector_placement
fl_set_fselector_title
fl_set_fselector_transient
fl_set_gamma
fl_set_gc_clipping
fl_set_glcanvas_attributes
fl_set_glcanvas_defaults
fl_set_glcanvas_direct
fl_set_goodies_font
fl_set_graphics_mode
fl_set_icm_color
fl_set_idle_callback
fl_set_idle_delta
fl_set_initial_placement
fl_set_input
fl_set_input_color
fl_set_input_cursorpos
fl_set_input_editkeymap
fl_set_input_filter
fl_set_input_format
fl_set_input_hscrollbar
fl_set_input_maxchars
fl_set_input_return
fl_set_input_scroll
fl_set_input_scrollbarsize
fl_set_input_selected
fl_set_input_selected_range
fl_set_input_shortcut
fl_set_input_topline
fl_set_input_vscrollbar
fl_set_input_xoffset
fl_set_linestyle
fl_set_linewidth
fl_set_menu
fl_set_menu_entries 
fl_set_menu_item_mode
fl_set_menu_item_shortcut
fl_set_menu_popup
fl_set_menubar 
fl_set_menubar_entries 
fl_set_mouse
fl_set_object_align
fl_set_object_automatic
fl_set_object_boxtype
fl_set_object_bw
fl_set_object_callback
fl_set_object_color
fl_set_object_dblbuffer
fl_set_object_dblclick
fl_set_object_focus
fl_set_object_geometry
fl_set_object_gravity
fl_set_object_label
fl_set_object_lalign
fl_set_object_lcol
fl_set_object_lcolor
fl_set_object_lsize
fl_set_object_lstyle
fl_set_object_position
fl_set_object_posthandler
fl_set_object_prehandler
fl_set_object_resize
fl_set_object_return
fl_set_object_shortcut
fl_set_object_shortcutkey
fl_set_object_size
fl_set_oneliner_color
fl_set_oneliner_font
fl_set_pattern
fl_set_pixmap_align
fl_set_pixmap_colorcloseness
fl_set_pixmap_data
fl_set_pixmap_file
fl_set_pixmap_pixmap
fl_set_pixmapbutton_align
fl_set_pixmapbutton_data
fl_set_pixmapbutton_datafile
fl_set_pixmapbutton_file
fl_set_pixmapbutton_focus_outline
fl_set_pixmapbutton_pixmap
fl_set_positioner_return
fl_set_positioner_xbounds
fl_set_positioner_xstep
fl_set_positioner_xvalue
fl_set_positioner_ybounds
fl_set_positioner_ystep
fl_set_positioner_yvalue
fl_set_resource
fl_set_scrollbar_bounds 
fl_set_scrollbar_increment 
fl_set_scrollbar_return 
fl_set_scrollbar_size 
fl_set_scrollbar_step 
fl_set_scrollbar_type
fl_set_scrollbar_value 
fl_set_slider_bounds
fl_set_slider_filter
fl_set_slider_increment
fl_set_slider_precision
fl_set_slider_return
fl_set_slider_size
fl_set_slider_step
fl_set_slider_value
fl_set_tabstop
fl_set_text_clipping
fl_set_thinscrollbar
fl_set_timer
fl_set_timer_countup
fl_set_timer_filter
fl_set_ul_property
fl_set_visualID
fl_set_winstepunit
fl_set_xyplot_alphaxtics
fl_set_xyplot_alphaytics
fl_set_xyplot_data
fl_set_xyplot_datafile
fl_set_xyplot_file
fl_set_xyplot_fixed_xaxis
fl_set_xyplot_fixed_yaxis
fl_set_xyplot_fontsize
fl_set_xyplot_fontstyle
fl_set_xyplot_inspect
fl_set_xyplot_interpolate
fl_set_xyplot_key 
fl_set_xyplot_key_font 
fl_set_xyplot_key_position 
fl_set_xyplot_keys 
fl_set_xyplot_linewidth
fl_set_xyplot_maxoverlays
fl_set_xyplot_overlay_type
fl_set_xyplot_return
fl_set_xyplot_symbol
fl_set_xyplot_symbolsize
fl_set_xyplot_xbounds
fl_set_xyplot_xgrid
fl_set_xyplot_xscale
fl_set_xyplot_xtics
fl_set_xyplot_ybounds
fl_set_xyplot_ygrid
fl_set_xyplot_yscale
fl_set_xyplot_ytics
fl_setpup
fl_setpup_bw
fl_setpup_checkcolor
fl_setpup_color
fl_setpup_cursor
fl_setpup_default_bw
fl_setpup_default_checkcolor 
fl_setpup_default_color 
fl_setpup_default_cursor
fl_setpup_default_fontsize 
fl_setpup_default_fontstyle 
fl_setpup_entercb 
fl_setpup_entries 
fl_setpup_fontsize
fl_setpup_fontstyle
fl_setpup_hotkey
fl_setpup_itemcb 
fl_setpup_leavecb 
fl_setpup_maxpup
fl_setpup_menucb 
fl_setpup_mode
fl_setpup_pad
fl_setpup_position
fl_setpup_selection
fl_setpup_shadow
fl_setpup_shortcut
fl_setpup_softedge
fl_setpup_submenu
fl_setpup_title
fl_share_canvas_colormap
fl_show_alert
fl_show_browser_line
fl_show_choice
fl_show_choices
fl_show_colormap
fl_show_command_log
fl_show_errors
fl_show_file_selector
fl_show_form
fl_show_form_window
fl_show_fselector
fl_show_input
fl_show_menu_symbol
fl_show_message
fl_show_messages
fl_show_object
fl_show_oneliner
fl_show_question
fl_show_simple_input
fl_showpup
fl_signal_caught
fl_simple_line
fl_stuff_clipboard
fl_suspend_timer
fl_textcolor
fl_textgc
fl_transient
fl_trigger_object
fl_ul_magic_char
fl_unfreeze_all_forms
fl_unfreeze_form
fl_unset_clipping
fl_unset_gc_clipping
fl_unset_text_clipping
fl_use_fselector
fl_vclass_name
fl_vclass_val
fl_vmode
fl_vroot
fl_whoami 
fl_win_background
fl_win_to_form
fl_winaspect
fl_winbackground
fl_winclose
fl_wincreate
fl_winfocus 
fl_wingeometry
fl_winget
fl_winhide
fl_winicon
fl_winisvalid
fl_winmaxsize
fl_winminsize
fl_winmove
fl_winopen
fl_winposition
fl_winreparent 
fl_winreshape
fl_winresize
fl_winset
fl_winshow
fl_winsize
fl_winstepunit
fl_wintitle
fl_xyplot_s2w
fl_xyplot_w2s
);

sub AUTOLOAD {
    #
    # Xforms does not use autoloading. Die!!
    # 

    local($constname);
    ($constname = $AUTOLOAD) =~ s/.*:://;
    my($pack,$file,$line) = caller;
    my($ver_rev, $ver, $rev) = fl_library_version();
    die "\"$file\", line $line: \"$constname\" not implemented in Xforms $ver.$rev\n";
}

bootstrap X11::Xforms;

# Preloaded methods go here.

# Autoload methods go after __END__, and are processed by the autosplit program.

#
# Aliased function names
#
	*fl_add_selected_xevent = \&fl_addto_selected_xevent;
	*fl_append_browser = \&fl_addto_browser_chars;
	*fl_bgnclosedline = \&fl_reset_vertex;
	*fl_bgnline = \&fl_reset_vertex;
	*fl_bgnpolygon = \&fl_reset_vertex;
	*fl_close_command = \&fl_end_command;
	*fl_compute_object_geometry = \&fl_get_object_bbox;
	*fl_draw_object_outside_label = \&fl_draw_object_label_outside;
	*fl_free_pixmapbutton_pixmap = \&fl_free_pixmap_pixmap;
	*fl_get_display = \&fl_display;
	*fl_get_flcolor = \&fl_get_pixel;
	*fl_get_fntstruct = \&fl_get_fontstruct;
	*fl_get_font_struct = \&fl_get_fontstruct;
	*fl_get_form_vclass = \&fl_vmode;
	*fl_get_pixmapbutton_pixmap = \&fl_get_pixmap_pixmap;
	*fl_get_string_size = \&fl_get_string_dimension;
	*fl_get_vclass = \&fl_vmode;
	*fl_get_vmode = \&fl_vmode;
	*fl_get_win_geometry = \&fl_get_wingeometry;
	*fl_get_win_origin = \&fl_get_winorigin;
	*fl_get_win_size = \*fl_get_winsize;
	*fl_initial_winposition = \&fl_winposition;
	*fl_keypressed = \&fl_keysym_pressed;
	*fl_mousebutton = \&fl_mouse_button;
	*fl_open_command = \&fl_exe_command;
	*fl_oval_bound = \&fl_ovalbound;
	*fl_pref_wingeometry = \&fl_wingeometry;
	*fl_pref_winposition = \&fl_winposition;
	*fl_pref_winsize = \&fl_winsize;
	*fl_set_bitmap_datafile = \&fl_set_bitmap_file;
	*fl_set_bitmapbutton_datafile = \&fl_set_bitmapbutton_file;
	*fl_set_button_shortcut = \&fl_set_object_shortcut;
    *fl_set_canvas_decoration = \&fl_set_object_boxtype;
	*fl_set_chart_lcol = \&fl_set_chart_lcolor;
	*fl_set_choices_shortcut = \&fl_set_choice_shortcut;
	*fl_setpup_default_fontsize = \&fl_setpup_fontsize;
	*fl_setpup_default_fontstyle = \&fl_setpup_fontstyle;
	*fl_setpup_default_color = \&fl_setpup_color;
	*fl_setpup_default_checkcolor = \&fl_setpup_checkcolor;
	*fl_set_drawmode = \&fl_drawmode;
	*fl_set_fselector_cb = \&fl_set_fselector_callback;
	*fl_set_input_shortcut = \&fl_set_object_shortcut;
	*fl_set_linestyle = \&fl_linestyle;
	*fl_set_linewidth = \&fl_linewidth;
	*fl_set_object_align = \&fl_set_object_lalign;
	*fl_set_object_focus = \&fl_set_focus_object;
	*fl_set_object_lcolor = \&fl_set_object_lcol;
	*fl_set_pixmapbutton_datafile = \&fl_set_pixmap_file;
	*fl_set_pixmapbutton_data = \&fl_set_pixmap_data;
	*fl_set_pixmapbutton_pixmap = \&fl_set_pixmap_pixmap;
	*fl_set_pixmapbutton_align = \&fl_set_pixmap_align;
	*fl_set_pixmapbutton_file = \&fl_set_pixmap_file;
	*fl_set_winstepunit = \&fl_winstepunit;
	*fl_setpup_hotkey = \&fl_setpup_shortcut;
	*fl_show_file_selector = \&fl_show_fselector;
	*fl_simple_line = \&fl_line;
	*fl_set_xyplot_datafile = \&fl_set_xyplot_file;
	*fl_register_callback = \&fl_register_raw_callback;
	*fl_set_form_call_back = \&fl_set_form_callback;
	*fl_set_call_back = \&fl_set_object_callback;
	*fl_default_win = \&fl_default_window;
	*fl_setpup = \&fl_setpup_mode;
	*fl_mapcolor_name = \&fl_mapcolorname;
	*fl_set_initial_placement = \&fl_set_form_geometry;
	*fl_win_background = \&fl_winbackground;

use constant FL_ACTIVE_XYPLOT => 7; 
use constant FL_ALIGN_BOTTOM => 2; 
use constant FL_ALIGN_BOTTOM_LEFT => 6; 
use constant FL_ALIGN_BOTTOM_RIGHT => 10; 
use constant FL_ALIGN_CENTER => 0; 
use constant FL_ALIGN_INSIDE => 8192; 
use constant FL_ALIGN_LEFT => 4; 
use constant FL_ALIGN_LEFT_BOTTOM => 6; 
use constant FL_ALIGN_LEFT_TOP => 5; 
use constant FL_ALIGN_RIGHT => 8; 
use constant FL_ALIGN_RIGHT_BOTTOM => 10; 
use constant FL_ALIGN_RIGHT_TOP => 9; 
use constant FL_ALIGN_TOP => 1; 
use constant FL_ALIGN_TOP_LEFT => 5; 
use constant FL_ALIGN_TOP_RIGHT => 9; 
use constant FL_ALIGN_VERT => 16384; 
use constant FL_ALL_FREE => 4; 
use constant FL_ALPHASORT => 1; 
use constant FL_ALT_MASK => 33554432; 
use constant FL_ALT_VAL => 33554432;
use constant FL_ANALOG_CLOCK => 0; 
use constant FL_AND => 1; 
use constant FL_ATTRIB => 18; 
use constant FL_AUTO => 2; 
use constant FL_BAR_CHART => 0; 
use constant FL_BEGIN_GROUP => 10000;
use constant FL_BITMAP => 8;
use constant FL_BITMAPBUTTON => 6; 
use constant FL_BITMAPBUTTON_ALIGN => 2; 
use constant FL_BITMAPBUTTON_BOXTYPE => 1; 
use constant FL_BITMAPBUTTON_COL1 => 11; 
use constant FL_BITMAPBUTTON_COL2 => 4; 
use constant FL_BITMAPBUTTON_LCOL => 0;
use constant FL_BITMAP_ALIGN => 2;
use constant FL_BITMAP_BOXTYPE => 0; 
use constant FL_BITMAP_COL1 => 11; 
use constant FL_BITMAP_COL2 => 11; 
use constant FL_BITMAP_LCOL => 0; 
use constant FL_BLACK => 0; 
use constant FL_BLUE => 4;
use constant FL_BOLDITALIC_STYLE => 3; 
use constant FL_BOLD_STYLE => 1; 
use constant FL_BOOL => 11;
use constant FL_BORDER_BOX => 3; 
use constant FL_BORDER_FRAME => 3; 
use constant FL_BOTTOM_BCOL => 13; 
use constant FL_BOTTOM_TABFOLDER => 1; 
use constant FL_BOUND_WIDTH => 3;
use constant FL_BOX => 10; 
use constant FL_BROWSER => 19; 
use constant FL_BROWSER_ALIGN => 2; 
use constant FL_BROWSER_BOXTYPE => 2; 
use constant FL_BROWSER_COL1 => 11; 
use constant FL_BROWSER_COL2 => 3; 
use constant FL_BROWSER_FONTSIZE => 10;
use constant FL_BROWSER_LCOL => 0;
use constant FL_BROWSER_LINELENGTH => 1024; 
use constant FL_BROWSER_SLCOL => 11; 
use constant FL_BUILT_IN_COLS => 30;
use constant FL_BUTTON => 1;
use constant FL_BUTTON_ALIGN => 0; 
use constant FL_BUTTON_BOXTYPE => 1; 
use constant FL_BUTTON_BW => 3; 
use constant FL_BUTTON_COL1 => 11; 
use constant FL_BUTTON_COL2 => 11;
use constant FL_BUTTON_LCOL => 0; 
use constant FL_BUTTON_MCOL1 => 16; 
use constant FL_BUTTON_MCOL2 => 16; 
use constant FL_CANCEL => 0; 
use constant FL_CANVAS => 28;
use constant FL_CANVAS_ALIGN => 1; 
use constant FL_CANVAS_BOXTYPE => 2;
use constant FL_CHART => 13; 
use constant FL_CHARTREUSE => 26; 
use constant FL_CHART_ALIGN => 2;
use constant FL_CHART_BOXTYPE => 3; 
use constant FL_CHART_COL1 => 11; 
use constant FL_CHART_LCOL => 0; 
use constant FL_CHART_MAX => 512; 
use constant FL_CHECKBUTTON => 5; 
use constant FL_THIN_SCROLLBAR => 0; 
use constant FL_PLAIN_SCROLLBAR => 1; 
use constant FL_NORMAL_SCROLLBAR => 2; 
use constant FL_NICE_SCROLLBAR => 3; 
use constant FL_CHECKBUTTON_ALIGN => 0; 
use constant FL_CHECKBUTTON_BOXTYPE => 0;
use constant FL_CHECKBUTTON_COL1 => 11; 
use constant FL_CHECKBUTTON_COL2 => 3;
use constant FL_CHECKBUTTON_LCOL => 0; 
use constant FL_CHECKBUTTON_MCOL => 16; 
use constant FL_CHECKBUTTON_TOPCOL => 11;
use constant FL_CHOICE => 14; 
use constant FL_CHOICE_ALIGN => 4; 
use constant FL_CHOICE_BOXTYPE => 6;
use constant FL_CHOICE_COL1 => 11; 
use constant FL_CHOICE_COL2 => 0; 
use constant FL_CHOICE_LCOL => 0; 
use constant FL_CHOICE_MAXITEMS => 80;
use constant FL_CHOICE_MCOL => 16;
use constant FL_CIRCLE_XYPLOT => 2; 
use constant FL_CLASS_END => 9999;
use constant FL_CLASS_START => 1001;
use constant FL_CLICK_TIMEOUT => 400;
use constant FL_CLOCK => 22;
use constant FL_CLOCK_ALIGN => 2; 
use constant FL_CLOCK_BOXTYPE => 1; 
use constant FL_CLOCK_COL1 => 17; 
use constant FL_CLOCK_COL2 => 13; 
use constant FL_CLOCK_LCOL => 0;
use constant FL_CLOCK_TOPCOL => 11; 
use constant FL_CLOSE => -2; 
use constant FL_COL1 => 11; 
use constant FL_CONTINUOUS_FREE => 3; 
use constant FL_CONTROL_MASK => 67108864;
use constant FL_COORD_MM => 1;
use constant FL_COORD_PIXEL => 0; 
use constant FL_COORD_POINT => 2; 
use constant FL_COORD_centiMM => 3; 
use constant FL_COORD_centiPOINT => 4; 
use constant FL_COPY => 3; 
use constant FL_COUNTER => 15; 
use constant FL_COUNTER_ALIGN => 2;
use constant FL_COUNTER_BOXTYPE => 1; 
use constant FL_COUNTER_BW => 2; 
use constant FL_COUNTER_COL1 => 11;
use constant FL_COUNTER_COL2 => 4; 
use constant FL_COUNTER_LCOL => 0; 
use constant FL_CYAN => 6; 
use constant FL_DARKCYAN => 21; 
use constant FL_DARKGOLD => 19; 
use constant FL_DARKORANGE => 24; 
use constant FL_DARKTOMATO => 22; 
use constant FL_DARKVIOLET => 27; 
use constant FL_DASH => 5; 
use constant FL_DASHED_XYPLOT => 5;
use constant FL_DATE_INPUT => 3; 
use constant FL_DBLCLICK => 16; 
use constant FL_DEEPPINK => 25; 
use constant FL_DEFAULT_CURSOR => -1; 
use constant FL_DEFAULT_FONT => 10; 
use constant FL_DEFAULT_SIZE => 10; 
use constant FL_DIAL => 20;
use constant FL_DIAL_ALIGN => 2; 
use constant FL_DIAL_BOXTYPE => 8; 
use constant FL_DIAL_CCW => 1; 
use constant FL_DIAL_COL1 => 11; 
use constant FL_DIAL_COL2 => 12; 
use constant FL_DIAL_CW => 0; 
use constant FL_DIAL_LCOL => 0; 
use constant FL_DIAL_TOPCOL => 11; 
use constant FL_DIGITAL_CLOCK => 1; 
use constant FL_DODGERBLUE => 29; 
use constant FL_DOGERBLUE => 29;
use constant FL_DOT => 3;
use constant FL_DOTDASH => 4; 
use constant FL_DOTDASHED_XYPLOT => 10;
use constant FL_DOTTED_XYPLOT => 9;
use constant FL_DOWN_BOX => 2; 
use constant FL_DOWN_FRAME => 2;
use constant FL_DRAW => 1; 
use constant FL_DRAWLABEL => 15; 
use constant FL_DROPLIST_CHOICE => 2; 
use constant FL_DefaultVisual => 10; 
use constant FL_EMBOSSED_BOX => 7; 
use constant FL_EMBOSSED_FRAME => 7;
use constant FL_EMBOSSED_STYLE => 2048;
use constant FL_EMPTY_XYPLOT => 8; 
use constant FL_END_GROUP => 20000;
use constant FL_ENGRAVED_FRAME => 5; 
use constant FL_ENGRAVED_STYLE => 1024;
use constant FL_ENTER => 4;
use constant FL_EXCEPT => 4; 
use constant FL_East => 6; 
use constant FL_FILLED_CHART => 3; 
use constant FL_FILL_CHART => 3;
use constant FL_FILL_DIAL => 2; 
use constant FL_FILL_XYPLOT => 3; 
use constant FL_FIXEDBOLDITALIC_STYLE => 7; 
use constant FL_FIXEDBOLD_STYLE => 5; 
use constant FL_FIXEDITALIC_STYLE => 6; 
use constant FL_FIXED_STYLE => 4; 
use constant FL_FIX_SIZE => 32768; 
use constant FL_FLAT_BOX => 8;
use constant FL_FLOAT => 14; 
use constant FL_FLOAT_INPUT => 1;
use constant FL_FOCUS => 7; 
use constant FL_FRAME => 26;
use constant FL_FRAME_BOX => 5;
use constant FL_FRAME_COL1 => 0; 
use constant FL_FRAME_COL2 => 0; 
use constant FL_FRAME_LCOL => 0; 
use constant FL_FREE => 24;
use constant FL_FREEMEM => 13; 
use constant FL_FREE_COL1 => 256; 
use constant FL_FREE_COL10 => 265;
use constant FL_FREE_COL11 => 266;
use constant FL_FREE_COL12 => 267;
use constant FL_FREE_COL13 => 268;
use constant FL_FREE_COL14 => 269;
use constant FL_FREE_COL15 => 270;
use constant FL_FREE_COL16 => 271;
use constant FL_FREE_COL2 => 257;
use constant FL_FREE_COL3 => 258;
use constant FL_FREE_COL4 => 259;
use constant FL_FREE_COL5 => 260;
use constant FL_FREE_COL6 => 261;
use constant FL_FREE_COL7 => 262;
use constant FL_FREE_COL8 => 263;
use constant FL_FREE_COL9 => 264;
use constant FL_FREE_SIZE => 16384; 
use constant FL_FULLBORDER => 1; 
use constant FL_ForgetGravity => 0;
use constant FL_GLCANVAS => 29; 
use constant FL_GRAY16 => 12; 
use constant FL_GRAY35 => 13; 
use constant FL_GRAY63 => 11; 
use constant FL_GRAY75 => 16; 
use constant FL_GRAY80 => 14; 
use constant FL_GRAY90 => 15; 
use constant FL_GREEN => 2; 
use constant FL_GRID_MAJOR => 1; 
use constant FL_GRID_MINOR => 2; 
use constant FL_GRID_NONE => 0; 
use constant FL_GrayScale => 1; 
use constant FL_HIDDEN_BUTTON => 3; 
use constant FL_HIDDEN_INPUT => 5; 
use constant FL_HIDDEN_RET_BUTTON => 7; 
use constant FL_HIDDEN_TIMER => 2; 
use constant FL_HOLD_BROWSER => 2;
use constant FL_HORBAR_CHART => 1;
use constant FL_HOR_BASIC_SCROLLBAR => 6;
use constant FL_HOR_PLAIN_SCROLLBAR => 6;
use constant FL_HOR_BROWSER_SLIDER => 6; 
use constant FL_HOR_FILL_SLIDER => 3;
use constant FL_HOR_NICE_SCROLLBAR => 4;
use constant FL_HOR_NICE_SLIDER => 5; 
use constant FL_HOR_SCROLLBAR => 0;
use constant FL_HOR_SLIDER => 1; 
use constant FL_HOR_THIN_SCROLLBAR => 2;
use constant FL_HUGE_FONT => 24; 
use constant FL_HUGE_SIZE => 24; 
use constant FL_IGNORE => -1; 
use constant FL_IMAGECANVAS => 34;
use constant FL_IMPULSE_XYPLOT => 6;
use constant FL_INACTIVE => 17; 
use constant FL_INACTIVE_COL => 17; 
use constant FL_INACTIVE_FREE => 1; 
use constant FL_INDIANRED => 9; 
use constant FL_INOUT_BUTTON => 5; 
use constant FL_INPUT => 18;
use constant FL_INPUT_ALIGN => 4; 
use constant FL_INPUT_BOXTYPE => 2; 
use constant FL_INPUT_CCOL => 4;
use constant FL_INPUT_COL1 => 11;
use constant FL_INPUT_COL2 => 16; 
use constant FL_INPUT_DDMM => 1; 
use constant FL_INPUT_FREE => 2; 
use constant FL_INPUT_LCOL => 0; 
use constant FL_INPUT_MMDD => 0; 
use constant FL_INPUT_TCOL => 0; 
use constant FL_INT => 12; 
use constant FL_INT_INPUT => 2;
use constant FL_INVALID => 0;
use constant FL_INVALID_CLASS => 0; 
use constant FL_INVALID_STYLE => -1; 
use constant FL_INVISIBLE_CURSOR => -2;
use constant FL_ITALIC_STYLE => 2; 
use constant FL_KEYBOARD => 9;
use constant FL_KEY_ALL => 7;
use constant FL_KEY_NORMAL => 1; 
use constant FL_KEY_SPECIAL => 4; 
use constant FL_KEY_TAB => 2; 
use constant FL_LABELFRAME => 27;
use constant FL_LARGE_FONT => 18; 
use constant FL_LARGE_SIZE => 18; 
use constant FL_LCOL => 0; 
use constant FL_LEAVE => 5; 
use constant FL_LEFTMOUSE => 0; 
use constant FL_LEFT_BCOL => 15; 
use constant FL_LEFT_MOUSE => 0;
use constant FL_LEFT_TABFOLDER => 2; 
use constant FL_LIGHTBUTTON => 2; 
use constant FL_LIGHTBUTTON_ALIGN => 0; 
use constant FL_LIGHTBUTTON_BOXTYPE => 1; 
use constant FL_LIGHTBUTTON_COL1 => 11; 
use constant FL_LIGHTBUTTON_COL2 => 3; 
use constant FL_LIGHTBUTTON_LCOL => 0; 
use constant FL_LIGHTBUTTON_MCOL => 16;
use constant FL_LIGHTBUTTON_MINSIZE => 12;
use constant FL_LIGHTBUTTON_TOPCOL => 11; 
use constant FL_LINEAR => 0; 
use constant FL_LINEPOINTS_XYPLOT => 12;
use constant FL_LINE_CHART => 2;
use constant FL_LINE_DIAL => 1; 
use constant FL_LOG => 1; 
use constant FL_LONG => 13; 
use constant FL_LONGDASH => 6;
use constant FL_LONGDASHED_XYPLOT => 11;
use constant FL_MAGENTA => 5;
use constant FL_MAXFONTS => 48;
use constant FL_MAXPUPI => 80; 
use constant FL_MAX_COLS => 1024; 
use constant FL_MAX_FONTSIZES => 10;
use constant FL_MAX_FSELECTOR => 6; 
use constant FL_MAX_XYPLOTOVERLAY => 32; 
use constant FL_MBUTTON1 => 1; 
use constant FL_MBUTTON2 => 2; 
use constant FL_MBUTTON3 => 3; 
use constant FL_MBUTTON4 => 4; 
use constant FL_MBUTTON5 => 5; 
use constant FL_MCOL => 16; 
use constant FL_MEDIUM_FONT => 14; 
use constant FL_MEDIUM_SIZE => 14; 
use constant FL_MENU => 12; 
use constant FL_MENUBAR => 33;
use constant FL_MENUBAR_BOXTYPE => 1;
use constant FL_MENUBAR_COL1 => 11; 
use constant FL_MENUBAR_COL2 => 16;
use constant FL_MENUBAR_LCOL => 0;
use constant FL_MENU_ALIGN => 0;
use constant FL_MENU_BOXTYPE => 3; 
use constant FL_MENU_BUTTON => 8; 
use constant FL_MENU_COL1 => 11;
use constant FL_MENU_COL2 => 16; 
use constant FL_MENU_LCOL => 0; 
use constant FL_MENU_MAXITEMS => 128;
use constant FL_MENU_MAXSTR => 64; 
use constant FL_MIDDLEMOUSE => 1;
use constant FL_MIDDLE_MOUSE => 1; 
use constant FL_MINDEPTH => 1; 
use constant FL_MODAL => 256;
use constant FL_MOTION => 10; 
use constant FL_MOUSE => 6; 
use constant FL_MTIMESORT => 3; 
use constant FL_MULTILINE_INPUT => 4; 
use constant FL_MULTI_BROWSER => 3;
use constant FL_NOBORDER => 3; 
use constant FL_NOEVENT => 0; 
use constant FL_NONE => 0; 
use constant FL_NORMAL_BITMAP => 0;
use constant FL_NORMAL_BROWSER => 0; 
use constant FL_NORMAL_BUTTON => 0; 
use constant FL_NORMAL_CANVAS => 0;
use constant FL_NORMAL_CHOICE => 0; 
use constant FL_NORMAL_CHOICE2 => 1; 
use constant FL_NORMAL_COUNTER => 0; 
use constant FL_NORMAL_DIAL => 0; 
use constant FL_NORMAL_FONT => 12; 
use constant FL_NORMAL_FONT1 => 10; 
use constant FL_NORMAL_FONT2 => 12; 
use constant FL_NORMAL_FREE => 0;
use constant FL_NORMAL_INPUT => 0; 
use constant FL_NORMAL_MENUBAR => 0; 
use constant FL_NORMAL_PIXMAP => 0; 
use constant FL_NORMAL_POSITIONER => 0;
use constant FL_NORMAL_SIZE => 12; 
use constant FL_NORMAL_STYLE => 0; 
use constant FL_NORMAL_TABFOLDER => 0; 
use constant FL_NORMAL_TEXT => 0; 
use constant FL_NORMAL_TIMER => 0;
use constant FL_NORMAL_XYPLOT => 0; 
use constant FL_NO_BOX => 0; 
use constant FL_NO_FRAME => 0; 
use constant FL_NoGravity => 0;
use constant FL_North => 2; 
use constant FL_NorthEast => 3; 
use constant FL_NorthWest => 1; 
use constant FL_OFF => 0; 
use constant FL_OK => 1; 
use constant FL_ON => 1;
use constant FL_ORCHID => 20; 
use constant FL_OTHER => 14;
use constant FL_OVAL3D_DOWNBOX => 15;
use constant FL_OVAL3D_EMBOSSEDBOX => 17;
use constant FL_OVAL3D_FRAMEBOX => 16;
use constant FL_OVAL3D_UPBOX => 14;
use constant FL_OVAL_BOX => 11; 
use constant FL_OVAL_FRAME => 8; 
use constant FL_OVERLAY_POSITIONER => 1; 
use constant FL_OptionIsArg => 1; 
use constant FL_OptionNoArg => 0; 
use constant FL_OptionResArg => 4; 
use constant FL_OptionSepArg => 3; 
use constant FL_OptionSkipArg => 5; 
use constant FL_OptionSkipLine => 6; 
use constant FL_OptionSkipNArgs => 7; 
use constant FL_OptionStickyArg => 2; 
use constant FL_PALEGREEN => 18; 
use constant FL_PDBS => 16384;
use constant FL_PDBorderWidth => 524288;
use constant FL_PDBrowserFontSize => 4194304;
use constant FL_PDButtonFontSize => 256; 
use constant FL_PDButtonLabel => 256;
use constant FL_PDButtonLabelSize => 256; 
use constant FL_PDChoiceFontSize => 8388608;
use constant FL_PDClass => 4;
use constant FL_PDCoordUnit => 32768;
use constant FL_PDDebug => 65536;
use constant FL_PDDepth => 2; 
use constant FL_PDDouble => 8; 
use constant FL_PDInputFontSize => 512; 
use constant FL_PDInputLabelSize => 512; 
use constant FL_PDLabelFontSize => 16777216;
use constant FL_PDLeftScrollbar => 64; 
use constant FL_PDThinScrollbar => 64; 
use constant FL_PDScrollbarType => 64; 
use constant FL_PDMenuFontSize => 2097152;
use constant FL_PDPrivateMap => 32; 
use constant FL_PDPupFontSize => 128; 
use constant FL_PDSafe => 1048576;
use constant FL_PDSharedMap => 131072;
use constant FL_PDSliderFontSize => 1024;
use constant FL_PDSliderLabelSize => 1024; 
use constant FL_PDStandardMap => 262144;
use constant FL_PDSync => 16; 
use constant FL_PDULPropWidth => 8192;
use constant FL_PDULThickness => 4096;
use constant FL_PDVisual => 2048; 
use constant FL_PIE_CHART => 5; 
use constant FL_PIXMAP => 9; 
use constant FL_PIXMAPBUTTON => 7; 
use constant FL_PIXMAPBUTTON_ALIGN => 2;
use constant FL_PIXMAPBUTTON_BOXTYPE => 1; 
use constant FL_PIXMAPBUTTON_COL1 => 11; 
use constant FL_PIXMAPBUTTON_COL2 => 3; 
use constant FL_PIXMAPBUTTON_LCOL => 0; 
use constant FL_PLACE_ASPECT => 32; 
use constant FL_PLACE_CENTER => 2; 
use constant FL_PLACE_CENTERFREE => 16386; 
use constant FL_PLACE_FREE => 0;
use constant FL_PLACE_FREE_CENTER => 16386;
use constant FL_PLACE_FULLSCREEN => 64; 
use constant FL_PLACE_GEOMETRY => 16;
use constant FL_PLACE_HOTSPOT => 128;
use constant FL_PLACE_ICONIC => 256; 
use constant FL_PLACE_MOUSE => 1;
use constant FL_PLACE_POSITION => 4; 
use constant FL_PLACE_SIZE => 8;
use constant FL_POINTS_XYPLOT => 4; 
use constant FL_POSITIONER => 23;
use constant FL_POSITIONER_ALIGN => 2; 
use constant FL_POSITIONER_BOXTYPE => 2;
use constant FL_POSITIONER_COL1 => 11; 
use constant FL_POSITIONER_COL2 => 1; 
use constant FL_POSITIONER_LCOL => 0; 
use constant FL_PREEMPT => 1; 
use constant FL_PS => 19;
use constant FL_PULLDOWN_MENU => 2; 
use constant FL_PUP_BOX => 2; 
use constant FL_PUP_CHECK => 4; 
use constant FL_PUP_GRAY => 1; 
use constant FL_PUP_GREY => 1;
use constant FL_PUP_INACTIVE => 1; 
use constant FL_PUP_NONE => 0; 
use constant FL_PUP_PADH => 4;
use constant FL_PUP_RADIO => 8; 
use constant FL_PUP_TOGGLE => 2; 
use constant FL_PUSH => 2;
use constant FL_PUSH_BUTTON => 1; 
use constant FL_PUSH_MENU => 1; 
use constant FL_PseudoColor => 3; 
use constant FL_RADIO_BUTTON => 2; 
use constant FL_RALPHASORT => 2; 
use constant FL_READ => 1;
use constant FL_RED => 1; 
use constant FL_RELEASE => 3; 
use constant FL_RESIZE_ALL => 3;
use constant FL_RESIZE_NONE => 0;
use constant FL_RESIZE_X => 1; 
use constant FL_RESIZE_Y => 2; 
use constant FL_RETURN_ALWAYS => 3; 
use constant FL_RETURN_BUTTON => 6;
use constant FL_RETURN_CHANGED => 1; 
use constant FL_RETURN_DBLCLICK => 4; 
use constant FL_RETURN_END => 2; 
use constant FL_RETURN_END_CHANGED => 0; 
use constant FL_RFLAT_BOX => 9; 
use constant FL_RIGHTMOUSE => 2;
use constant FL_RIGHT_BCOL => 12;
use constant FL_RIGHT_MOUSE => 2; 
use constant FL_RIGHT_TABFOLDER => 3; 
use constant FL_RINGBELL => 16; 
use constant FL_RMTIMESORT => 4; 
use constant FL_ROUND3DBUTTON => 4; 
use constant FL_ROUND3DBUTTON_ALIGN => 0; 
use constant FL_ROUND3DBUTTON_BOXTYPE => 0; 
use constant FL_ROUND3DBUTTON_COL1 => 11; 
use constant FL_ROUND3DBUTTON_COL2 => 0; 
use constant FL_ROUND3DBUTTON_LCOL => 0; 
use constant FL_ROUND3DBUTTON_MCOL => 16; 
use constant FL_ROUND3DBUTTON_TOPCOL => 11; 
use constant FL_ROUNDBUTTON => 3; 
use constant FL_ROUNDBUTTON_ALIGN => 0; 
use constant FL_ROUNDBUTTON_BOXTYPE => 0;
use constant FL_ROUNDBUTTON_COL1 => 16; 
use constant FL_ROUNDBUTTON_COL2 => 3; 
use constant FL_ROUNDBUTTON_LCOL => 0; 
use constant FL_ROUNDBUTTON_MCOL => 16; 
use constant FL_ROUNDBUTTON_TOPCOL => 11; 
use constant FL_ROUNDED3D_DOWNBOX => 13;
use constant FL_ROUNDED3D_UPBOX => 12; 
use constant FL_ROUNDED_BOX => 6; 
use constant FL_ROUNDED_FRAME => 6; 
use constant FL_RSHADOW_BOX => 10; 
use constant FL_RSIZESORT => 6; 
use constant FL_SCROLLBAR => 31;
use constant FL_SCROLLBAR_ALWAYS_ON => 2; 
use constant FL_SCROLLBAR_OFF => 0; 
use constant FL_SCROLLBAR_ON => 1;
use constant FL_SCROLLBUTTON => 32;
use constant FL_SCROLLED_CANVAS => 1; 
use constant FL_SECRET_INPUT => 6; 
use constant FL_SELECT_BROWSER => 1; 
use constant FL_SHADOW_BOX => 4; 
use constant FL_SHADOW_FRAME => 4; 
use constant FL_SHADOW_STYLE => 512;
use constant FL_SHIFT_MASK => 134217728;
use constant FL_SHORT => 10;
use constant FL_SHORTCUT => 12; 
use constant FL_SIMPLE_CHOICE => 0;
use constant FL_SIMPLE_COUNTER => 1; 
use constant FL_SIZESORT => 5; 
use constant FL_SLATEBLUE => 10; 
use constant FL_SLEEPING_FREE => 1; 
use constant FL_SLIDER => 16; 
use constant FL_SLIDER_ALIGN => 2;
use constant FL_SLIDER_ALL => 15; 
use constant FL_SLIDER_BOX => 1; 
use constant FL_SLIDER_BOXTYPE => 2; 
use constant FL_SLIDER_BW1 => 3;
use constant FL_SLIDER_BW2 => 2; 
use constant FL_SLIDER_COL1 => 11; 
use constant FL_SLIDER_COL2 => 11; 
use constant FL_SLIDER_DOWN => 8; 
use constant FL_SLIDER_FINE => .05;
use constant FL_SLIDER_LCOL => 0; 
use constant FL_SLIDER_NOB => 2; 
use constant FL_SLIDER_NONE => 0; 
use constant FL_SLIDER_UP => 4; 
use constant FL_SLIDER_WIDTH => .10;
use constant FL_SMALL_FONT => 10; 
use constant FL_SMALL_SIZE => 10; 
use constant FL_SOLID => 0; 
use constant FL_SPECIALPIE_CHART => 6; 
use constant FL_SPIKE_CHART => 4;
use constant FL_SPRINGGREEN => 28; 
use constant FL_SQUARE_XYPLOT => 1; 
use constant FL_STEP => 11;
use constant FL_STRING => 15; 
use constant FL_South => 8; 
use constant FL_SouthEast => 9; 
use constant FL_SouthWest => 7; 
use constant FL_StaticColor => 2; 
use constant FL_StaticGray => 0; 
use constant FL_TABFOLDER => 30; 
use constant FL_TEXT => 11;
use constant FL_TEXT_ALIGN => 4; 
use constant FL_TEXT_BOXTYPE => 8; 
use constant FL_TEXT_COL1 => 11; 
use constant FL_TEXT_COL2 => 16; 
use constant FL_TEXT_LCOL => 0;
use constant FL_TIMER => 21;
use constant FL_TIMER_ALIGN => 0; 
use constant FL_TIMER_BLINKRATE => .2;
use constant FL_TIMER_BOXTYPE => 2; 
use constant FL_TIMER_COL1 => 11; 
use constant FL_TIMER_COL2 => 1;
use constant FL_TIMER_EVENT => 1073741824;
use constant FL_TIMER_LCOL => 0; 
use constant FL_TIMESBOLDITALIC_STYLE => 11; 
use constant FL_TIMESBOLD_STYLE => 9; 
use constant FL_TIMESITALIC_STYLE => 10; 
use constant FL_TIMES_STYLE => 8;
use constant FL_TINY_FONT => 8; 
use constant FL_TINY_SIZE => 8; 
use constant FL_TOMATO => 8; 
use constant FL_TOP_BCOL => 14; 
use constant FL_TOP_TABFOLDER => 0; 
use constant FL_TOUCH_BUTTON => 4; 
use constant FL_TOUCH_MENU => 0; 
use constant FL_TRANSIENT => 2; 
use constant FL_TRPLCLICK => 17; 
use constant FL_TrueColor => 4; 
use constant FL_UNFOCUS => 8;
use constant FL_UP_BOX => 1; 
use constant FL_UP_FRAME => 1; 
use constant FL_USERDASH => 1; 
use constant FL_USERDOUBLEDASH => 2; 
use constant FL_VALID => 1; 
use constant FL_VALSLIDER => 17; 
use constant FL_VALUE_TIMER => 1; 
use constant FL_VERT_BASIC_SCROLLBAR => 7;
use constant FL_VERT_PLAIN_SCROLLBAR => 7;
use constant FL_VERT_BROWSER_SLIDER => 7;
use constant FL_VERT_FILL_SLIDER => 2;
use constant FL_VERT_NICE_SCROLLBAR => 5;
use constant FL_VERT_NICE_SLIDER => 4;
use constant FL_VERT_SCROLLBAR => 1;
use constant FL_VERT_SLIDER => 0;
use constant FL_VERT_THIN_SCROLLBAR => 3;
use constant FL_WHEAT => 23; 
use constant FL_WHEN_NEEDED => 2; 
use constant FL_WHITE => 7; 
use constant FL_WM_NORMAL => 2; 
use constant FL_WM_SHIFT => 1;
use constant FL_WRITE => 2; 
use constant FL_West => 4; 
use constant FL_XOR => 6; 
use constant FL_XYPLOT => 25;
use constant FL_XYPLOT_ALIGN => 2; 
use constant FL_XYPLOT_BOXTYPE => 8; 
use constant FL_XYPLOT_COL1 => 11; 
use constant FL_XYPLOT_LCOL => 0; 
use constant FL_YELLOW => 3; 
use constant FL_illegalVisual => -1; 
use constant FT_FIFO => 1; 
use constant FT_FILE => 0; 


sub FL_IS_DOWNBOX {($_[0]==FL_DOWN_BOX()||$_[0]==FL_OVAL3D_DOWNBOX()||$_[0]==FL_ROUNDED3D_DOWNBOX());}
sub FL_IS_CANVAS  {($_[0]->objclass()==FL_CANVAS||$_[0]->objclass()==FL_GLCANVAS);}
sub FL_ObjWin     {(FL_IS_CANVAS($_[0])?fl_get_canvas_id($_[0]):$_[0]->window);}

sub fl_arc {fl_pieslice(0, $_[0]-$_[2], $_[1]-$_[2], 2*$_[2], 2*$_[2], $_[3], $_[4], $_[5]);}
sub fl_arcf {fl_pieslice(1, $_[0]-$_[2], $_[1]-$_[2], 2*$_[2], 2*$_[2], $_[3], $_[4], $_[5]);}
sub fl_circ {fl_oval(   0, $_[0]-$_[2], $_[1]-$_[2], 2*$_[2], 2*$_[2], $_[3]);}
sub fl_circf {fl_oval(  1, $_[0]-$_[2], $_[1]-$_[2], 2*$_[2], 2*$_[2], $_[3]);}
sub fl_diagline {fl_line($_[0],$_[1],$_[0]+$_[2]-1,$_[1]+$_[3]-1,$_[4]);}
sub fl_ovalf {fl_oval(1,@_);}
sub fl_ovall {fl_oval(0,@_);}
sub fl_rect {fl_rectangle(0,@_);}
sub fl_rectf {fl_rectangle(1,@_);}
sub fl_reset_cursor {fl_set_cursor(@_,FL_DEFAULT_CURSOR);}
sub fl_roundrect {fl_roundrectangle(0,@_);}
sub fl_roundrectf {fl_roundrectangle(1,@_);}
sub fl_set_fselector_title {fl_set_form_title(fl_get_fselector_form(),@_);}
sub fl_set_fselector_transient {fl_set_fselector_border($_[0] ? FL_TRANSIENT() : FL_FULLBORDER());}
sub fl_set_object_dblclick {my($ob, $t) = @_; $ob->click_timeout($t);}
sub fl_set_thinscrollbar {fl_set_scrollbar_type($_[0] ? FL_THIN_SCROLLBAR() : FL_NORMAL_SCROLLBAR());}

sub fl_initialize{

	fl_pre_init() if ($X4Pinit);
	my($rc) = fl_initialize_real(@_);
	fl_post_init() if ($X4Pinit);
	return $rc;
}

sub fl_set_error_logfp{
	my($file) = @_;
    fl_set_error_logfp_real(fileno($file));
}

sub fl_add_io_callback{
	my($file, @rest) = @_;
    fl_add_io_callback_real(fileno($file), @rest, $file);
}

sub fl_remove_io_callback{
	my($file, @rest) = @_;
    fl_remove_io_callback_real(fileno($file), @rest);
}

sub BEGIN {
	$X4Pinit = 0;
	if (-f $ENV{"HOME"}. "/.X4Pinit.pl")
	{
		require $ENV{"HOME"} . "/.X4Pinit.pl";
		$X4Pinit = 1;
	}
}

1;
__END__
